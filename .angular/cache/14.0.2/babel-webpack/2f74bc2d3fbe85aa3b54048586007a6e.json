{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./mail.page.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./mail.page.scss?ngResource\";\n1;\n2;\n3;\n4;\n5;\n6;\n7;\n8;\n9;\n10;\n11;\n12;\n13;\n14;\n15;\n16;\n17;\n18;\n19;\n20;\n21;\n22;\n23;\n24;\n25;\n26;\n27;\n28;\n29;\n30;\n31;\n32;\n33;\n34;\n35;\n36;\n37;\n38;\n39;\n40;\n41;\n42;\n43;\n44;\n45;\n46;\n47;\n48;\n49;\n50;\n51;\n52;\n53;\nimport { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PopoverController } from '@ionic/angular';\nimport { AccountPage } from '../account/account.page';\nlet MailPage = class MailPage {\n  constructor(http, popoverCtrl, router) {\n    this.http = http;\n    this.popoverCtrl = popoverCtrl;\n    this.router = router;\n    this.emails = [];\n  }\n\n  ngOnInit() {\n    this.http.get('https://devdactic.fra1.digitaloceanspaces.com/gmail/data.json').subscribe(res => {\n      this.emails = res;\n\n      for (let e of this.emails) {\n        // Create a custom color for every email\n        e.color = this.intToRGB(this.hashCode(e.from));\n      }\n    });\n  }\n\n  openDetails(id) {\n    this.router.navigate(['tabs', 'mail', id]);\n  } // https://stackoverflow.com/questions/3426404/create-a-hexadecimal-colour-based-on-a-string-with-javascript\n\n\n  hashCode(str) {\n    var hash = 0;\n\n    for (var i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n\n    return hash;\n  }\n\n  intToRGB(i) {\n    var c = (i & 0x00FFFFFF).toString(16).toUpperCase();\n    return '#' + '00000'.substring(0, 6 - c.length) + c;\n  }\n\n  doRefresh(ev) {\n    setTimeout(() => {\n      ev.target.complete();\n    }, 2000);\n  }\n\n};\n\nMailPage.ctorParameters = () => [{\n  type: HttpClient\n}, {\n  type: PopoverController\n}, {\n  type: Router\n}];\n\nMailPage = __decorate([Component({\n  selector: 'app-mail',\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], MailPage);\nexport { MailPage };\n2;\n3;\n4;\n5;\n6;\n7;\n8;\n9;\nasync;\nopenAccount(ev);\n{\n  const popover = await this.popoverCtrl.create({\n    component: AccountPage,\n    event: ev,\n    cssClass: 'custom-popover'\n  });\n  await popover.present();\n}","map":{"version":3,"mappings":";;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAT,QAA2B,sBAA3B;AACA,SAASC,SAAT,QAAkC,eAAlC;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAASC,WAAT,QAA4B,yBAA5B;IAOaC,QAAQ,SAARA,QAAQ;EAGnBC,YAAoBC,IAApB,EAA8CC,WAA9C,EAAsFC,MAAtF,EAAoG;IAAhF;IAA0B;IAAwC;IAFtF,cAAS,EAAT;EAEyG;;EAEzGC,QAAQ;IACN,KAAKH,IAAL,CAAUI,GAAV,CAAqB,+DAArB,EAAsFC,SAAtF,CAAgGC,GAAG,IAAG;MACpG,KAAKC,MAAL,GAAcD,GAAd;;MACA,KAAK,IAAIE,CAAT,IAAc,KAAKD,MAAnB,EAA2B;QACzB;QACAC,CAAC,CAACC,KAAF,GAAU,KAAKC,QAAL,CAAc,KAAKC,QAAL,CAAcH,CAAC,CAACI,IAAhB,CAAd,CAAV;MACD;IACF,CAND;EAOD;;EAEDC,WAAW,CAACC,EAAD,EAAG;IACZ,KAAKZ,MAAL,CAAYa,QAAZ,CAAqB,CAAC,MAAD,EAAS,MAAT,EAAiBD,EAAjB,CAArB;EACD,CAjBkB,CAmBnB;;;EACQH,QAAQ,CAACK,GAAD,EAAI;IAClB,IAAIC,IAAI,GAAG,CAAX;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAACG,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;MACnCD,IAAI,GAAGD,GAAG,CAACI,UAAJ,CAAeF,CAAf,KAAqB,CAACD,IAAI,IAAI,CAAT,IAAcA,IAAnC,CAAP;IACD;;IACD,OAAOA,IAAP;EACD;;EAEOP,QAAQ,CAACQ,CAAD,EAAE;IAChB,IAAIG,CAAC,GAAG,CAACH,CAAC,GAAG,UAAL,EACLI,QADK,CACI,EADJ,EAELC,WAFK,EAAR;IAIA,OAAO,MAAM,QAAQC,SAAR,CAAkB,CAAlB,EAAqB,IAAIH,CAAC,CAACF,MAA3B,CAAN,GAA2CE,CAAlD;EACD;;EAEDI,SAAS,CAACC,EAAD,EAAG;IACVC,UAAU,CAAC,MAAK;MACdD,EAAE,CAACE,MAAH,CAAUC,QAAV;IACD,CAFS,EAEP,IAFO,CAAV;EAGD;;AAxCkB;;;QAXZpC;;QAGAG;;QADAD;;;AASIG,QAAQ,eALpBJ,SAAS,CAAC;EACToC,QAAQ,EAAE,UADD;EAETC,8BAFS;;AAAA,CAAD,CAKW,GAARjC,QAAQ,CAAR;SAAAA;AA2Cb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAkC,KAAK;AAACC,WAAW,CAACP,EAAD,CAAX;AAAgB;EACpB,MAAMQ,OAAO,GAAG,MAAM,KAAKjC,WAAL,CAAiBkC,MAAjB,CAAwB;IAC5CC,SAAS,EAAEvC,WADiC;IAE5CwC,KAAK,EAAEX,EAFqC;IAG5CY,QAAQ,EAAE;EAHkC,CAAxB,CAAtB;EAMA,MAAMJ,OAAO,CAACK,OAAR,EAAN;AACD","names":["HttpClient","Component","Router","PopoverController","AccountPage","MailPage","constructor","http","popoverCtrl","router","ngOnInit","get","subscribe","res","emails","e","color","intToRGB","hashCode","from","openDetails","id","navigate","str","hash","i","length","charCodeAt","c","toString","toUpperCase","substring","doRefresh","ev","setTimeout","target","complete","selector","template","async","openAccount","popover","create","component","event","cssClass","present"],"sourceRoot":"","sources":["C:\\Users\\USER\\Desktop\\Gmail\\gmail\\src\\app\\pages\\mail\\mail.page.ts"],"sourcesContent":["\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PopoverController } from '@ionic/angular';\nimport { AccountPage } from '../account/account.page';\n \n@Component({\n  selector: 'app-mail',\n  templateUrl: './mail.page.html',\n  styleUrls: ['./mail.page.scss'],\n})\nexport class MailPage implements OnInit {\n  emails = [];\n \n  constructor(private http: HttpClient, private popoverCtrl: PopoverController, private router: Router) { }\n \n  ngOnInit() {\n    this.http.get<any[]>('https://devdactic.fra1.digitaloceanspaces.com/gmail/data.json').subscribe(res => {\n      this.emails = res;\n      for (let e of this.emails) {\n        // Create a custom color for every email\n        e.color = this.intToRGB(this.hashCode(e.from));\n      }\n    });\n  }\n \n  openDetails(id) {\n    this.router.navigate(['tabs', 'mail', id]);\n  }\n \n  // https://stackoverflow.com/questions/3426404/create-a-hexadecimal-colour-based-on-a-string-with-javascript\n  private hashCode(str) {\n    var hash = 0;\n    for (var i = 0; i < str.length; i++) {\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    return hash;\n  }\n \n  private intToRGB(i) {\n    var c = (i & 0x00FFFFFF)\n      .toString(16)\n      .toUpperCase();\n \n    return '#' + '00000'.substring(0, 6 - c.length) + c;\n  }\n \n  doRefresh(ev) {\n    setTimeout(() => {\n      ev.target.complete();\n    }, 2000);\n  }\n}\n\n2\n3\n4\n5\n6\n7\n8\n9\nasync openAccount(ev) {\n  const popover = await this.popoverCtrl.create({\n    component: AccountPage,\n    event: ev,\n    cssClass: 'custom-popover'\n  });\n \n  await popover.present();\n}\n"]},"metadata":{},"sourceType":"module"}